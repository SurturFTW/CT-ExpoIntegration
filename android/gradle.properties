# Project-wide Gradle settings.

# IDE (e.g. Android Studio) users:
# Gradle settings configured through the IDE *will override*
# any settings specified in this file.

# For more details on how to configure your build environment visit
# http://www.gradle.org/docs/current/userguide/build_environment.html

# Specifies the JVM arguments used for the daemon process.
# The setting is particularly useful for tweaking memory settings.
# Default value: -Xmx512m -XX:MaxMetaspaceSize=256m
org.gradle.jvmargs=-Xmx2048m -XX:MaxMetaspaceSize=512m

# When configured, Gradle will run in incubating parallel mode.
# This option should only be used with decoupled projects. More details, visit
# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects
# org.gradle.parallel=true

# AndroidX package structure to make it clearer which packages are bundled with the
# Android operating system, and which are packaged with your app's APK
# https://developer.android.com/topic/libraries/support-library/androidx-rn
android.useAndroidX=true

# Enable AAPT2 PNG crunching
android.enablePngCrunchInReleaseBuilds=true

# Use this property to specify which architecture you want to build.
# You can also override it from the CLI using
# ./gradlew <task> -PreactNativeArchitectures=x86_64
reactNativeArchitectures=armeabi-v7a,arm64-v8a,x86,x86_64

# Use this property to enable support to the new architecture.
# This will allow you to use TurboModules and the Fabric render in
# your application. You should enable this flag either if you want
# to write custom TurboModules/Fabric components OR use libraries that
# are providing them.
newArchEnabled=true

# Use this property to enable or disable the Hermes JS engine.
# If set to false, you will be using JSC instead.
hermesEnabled=true

# Enable GIF support in React Native images (~200 B increase)
expo.gif.enabled=true
# Enable webp support in React Native images (~85 KB increase)
expo.webp.enabled=true
# Enable animated webp support (~3.4 MB increase)
# Disabled by default because iOS doesn't support animated webp
expo.webp.animated=false

# Enable network inspector
EX_DEV_CLIENT_NETWORK_INSPECTOR=true

# Use legacy packaging to compress native libraries in the resulting APK.
expo.useLegacyPackaging=false

android.enableProguardInReleaseBuilds=true
android.extraMavenRepos=[]
clevertapCoreEnabled=true
clevertapPushEnabled=true
clevertapPushTemplatesEnabled=false
clevertapInAppEnabled=false
clevertapInboxEnabled=false
clevertapMediaForInAppsInboxEnabled=false
clevertapInstallReferrerEnabled=false
clevertapHmsPushEnabled=false
clevertapGoogleAdIdEnabled=false
clevertapCoreSdkVersion=7.1.2
androidxCoreVersion=1.9.0
firebaseMessagingVersion=23.0.6
clevertapPushTemplatesSdkVersion=1.2.4
appCompatVersion=1.6.0-rc01
fragmentVersion=1.3.6
recyclerViewVersion=1.2.1
viewPagerVersion=1.0.0
materialVersion=1.4.0
glideVersion=4.12.0
media3Version=1.1.1
installReferrerVersion=2.2
clevertapHmsSdkVersion=1.3.4
hmsPushVersion=6.11.0.300
playServicesAdsVersion=18.2.0